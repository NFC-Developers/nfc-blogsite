datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(cuid())
  firebaseUid String?  @unique
  email       String   @unique
  name        String?
  description String?
  role        Role     @default(USER)
  birthdate   DateTime?
  posts       Post[]
  comments    Comment[]
  blogs       Blog[]
  starRatings StarRating[]
  followers   Follower[] @relation("followed")
  following   Follower[] @relation("following")
  createdAt   DateTime  @default(now())
}

model Follower {
  id         String @id @default(cuid())
  follower   User   @relation("following", fields: [followerId], references: [id])
  followerId String
  followed   User   @relation("followed", fields: [followedId], references: [id])
  followedId String
  createdAt  DateTime @default(now())

  @@unique([followerId, followedId])
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  description String?
  bannerUrl   String?
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String
  createdAt   DateTime @default(now())
}

model Post {
  id           String    @id @default(cuid())
  title        String
  description  String?
  content      String
  author       User      @relation(fields: [authorId], references: [id])
  authorId     String
  tags         Tag[]     @relation("PostTags")
  comments     Comment[]
  rating       Rating    @default(GENERAL)
  isExplicit   Boolean?
  commentCount Int       @default(0)
  createdAt    DateTime  @default(now())
  stars        StarRating[]
  views        Int       @default(0)
}

model StarRating {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  post      Post    @relation(fields: [postId], references: [id])
  postId    String
  rating    Int     // 1-5 stars
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model TagCategory {
  id    String @id @default(cuid())
  name  String @unique
  tags  Tag[]
}

model Tag {
  id          String       @id @default(cuid())
  name        String
  category    TagCategory  @relation(fields: [categoryId], references: [id])
  categoryId  String
  posts       Post[]       @relation("PostTags")

   @@unique([name, categoryId])
}


model Comment {
  id        String   @id @default(cuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

enum Role {
  GUEST
  USER
  MODERATOR
}

enum Rating {
  GENERAL
  TEEN
  MATURE
}

